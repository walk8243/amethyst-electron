name: Release

on:
  release:
    types: [published]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TAG_ID: ${{ github.event.release.tag_name }}
  ELECTRON_VER: ''
  BREW_SHA: ''
  BREW_SHA_INTEL: ''

jobs:
  note:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: gh release view ${{ env.TAG_ID }} --json body --jq '.body' > release-note.md
      - run: echo "ELECTRON_VER=$(npx electron -v)" >> $GITHUB_ENV
      - run: curl -s https://raw.githubusercontent.com/electron/electron/${{ env.ELECTRON_VER }}/DEPS > DEPS
      - run: node ./scripts/electron-ver.js >> release-note.md
      - run: gh release edit ${{ env.TAG_ID }} --notes-file release-note.md

  linux:
    if: false
    needs: note
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run dist
      - run: ls -al dist

  windows:
    needs: note
    runs-on: windows-latest
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run dist
      - run: gh release upload ${{ env.TAG_ID }} 'dist\amethyst-${{ env.TAG_ID }}-win.msi'

  macos:
    needs: note
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run dist
      - run: echo "BREW_SHA=$(shasum -a 256 'dist/amethyst-${{ env.TAG_ID }}-mac.zip' | awk '{ print $1 }')" >> $GITHUB_ENV
      - run: gh release upload ${{ env.TAG_ID }} 'dist/amethyst-${{ env.TAG_ID }}-mac.dmg'
      - run: gh release upload ${{ env.TAG_ID }} 'dist/amethyst-${{ env.TAG_ID }}-mac.zip'

  macos-intel:
    needs: note
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run dist
      - name: Upload dmg
        run: |
          mv dist/amethyst-${{ env.TAG_ID }}-mac.dmg dist/amethyst-${{ env.TAG_ID }}-mac-intel.dmg
          gh release upload ${{ env.TAG_ID }} 'dist/amethyst-${{ env.TAG_ID }}-mac-intel.dmg'
      - name: Upload zip
        run: |
          mv dist/amethyst-${{ env.TAG_ID }}-mac.zip dist/amethyst-${{ env.TAG_ID }}-mac-intel.zip
          gh release upload ${{ env.TAG_ID }} 'dist/amethyst-${{ env.TAG_ID }}-mac-intel.zip'

  brew:
    needs: [macos, macos-intel]
    runs-on: ubuntu-latest
    steps:
      - run: gh release download ${{ env.TAG_ID }} --pattern '*.zip'
      - name: Set environment variables
        run: |
          echo "BREW_SHA=$(shasum -a 256 'dist/amethyst-${{ env.TAG_ID }}-mac.zip' | awk '{ print $1 }')" >> $GITHUB_ENV
          echo "BREW_SHA_INTEL=$(shasum -a 256 'dist/amethyst-${{ env.TAG_ID }}-mac-intel.zip' | awk '{ print $1 }')" >> $GITHUB_ENV
      - name: Homebrew update
        run: |
          gh workflow run main.yml --repo walk8243/homebrew-cask \
            -f type=brew \
            -f cask=amethyst \
            -f version=${{ env.TAG_ID }} \
            -f sha256=${{ env.BREW_SHA }} \
            -f sha256_intel=${{ env.BREW_SHA_INTEL }}
    env:
      GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      GH_REPO: ${{ github.repository }}
