name: Release

on:
  release:
    types: [published]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TAG_ID: ${{ github.event.release.tag_name }}

jobs:
  note:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: echo "ELECTRON_VER=$(npx electron -v)" >> $GITHUB_ENV
      - run: curl -s https://raw.githubusercontent.com/electron/electron/${{ env.ELECTRON_VER }}/DEPS > DEPS
      - run: node ./scripts/electron-ver.js
      - run: gh release update ${{ env.TAG_ID }} --notes-file ./scripts/release-notes.md

  linux:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm run dist
      - run: ls -al dist

  windows:
    runs-on: windows-latest
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm run dist
      - run: gh release upload ${{ env.TAG_ID }} "dist\amethyst-${{ env.TAG_ID }}-win.exe"

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npm run dist
      - run: gh release upload $TAG_ID "dist/amethyst-${TAG_ID}-mac.dmg"
      - run: gh release upload $TAG_ID "dist/amethyst-${TAG_ID}-mac.zip"
